// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebDataAnalysis.Infrastructure.Data;

#nullable disable

namespace WebDataAnalysis.Infrastructure.Migrations
{
    [DbContext(typeof(WebDataAnalysisDbContext))]
    [Migration("20250629154400_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.DeviceMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FindDeviceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("FindDeviceId");

                    b.ToTable("DeviceMappings");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.DeviceParameters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParameteresId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("ParameteresId");

                    b.ToTable("DeviceParameters");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.FindDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LenghtOfWave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MAC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpectrumOfWave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FindDevices");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Parameteres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parameteres");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.DeviceMapping", b =>
                {
                    b.HasOne("WebDataAnalysis.Domain.Entity.Device", "Device")
                        .WithMany("DeviceMapping")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebDataAnalysis.Domain.Entity.FindDevice", "FindDevice")
                        .WithMany("DeviceMapping")
                        .HasForeignKey("FindDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("FindDevice");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.DeviceParameters", b =>
                {
                    b.HasOne("WebDataAnalysis.Domain.Entity.Device", "Device")
                        .WithMany("DeviceParameteres")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebDataAnalysis.Domain.Entity.Parameteres", "Parameteres")
                        .WithMany("DeviceParameters")
                        .HasForeignKey("ParameteresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Parameteres");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.FindDevice", b =>
                {
                    b.HasOne("WebDataAnalysis.Domain.Entity.User", "User")
                        .WithMany("FindDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.User", b =>
                {
                    b.HasOne("WebDataAnalysis.Domain.Entity.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Device", b =>
                {
                    b.Navigation("DeviceMapping");

                    b.Navigation("DeviceParameteres");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.FindDevice", b =>
                {
                    b.Navigation("DeviceMapping");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Parameteres", b =>
                {
                    b.Navigation("DeviceParameters");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("WebDataAnalysis.Domain.Entity.User", b =>
                {
                    b.Navigation("FindDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
